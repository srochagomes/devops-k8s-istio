apiVersion: apps/v1
kind: StatefulSet
metadata:  
  namespace: app-env     
  labels:
    app: keycloak-app-statefull
    version: 21.0.2
  name: keycloak-application
  annotations:
    type: app
    domain: keycloak
    business: security
spec:
  serviceName: keycloak-service
  selector:
    matchLabels:
      app: keycloak-app
  template:
    metadata:
      labels:
        app: keycloak-app
        version: 21.0.2
    spec:
      containers:                        
          - name: keycloak-application-container
            image: quay.io/keycloak/keycloak:21.0.2
            args: ["start-dev"]
            env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: SECRET_POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: SECRET_POSTGRES_PASSWORD
            - name: KEYCLOAK_USER_ADMIN
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: SECRET_KEYCLOAK_ADMIN
            - name: KEYCLOAK_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: SECRET_KEYCLOAK_ADMIN_PASSWORD
            envFrom:
                - configMapRef:                    
                    name: keycloak-service-configmap
            imagePullPolicy: IfNotPresent
            readinessProbe:
                httpGet:
                    path: /health/ready
                    port: 8080
                initialDelaySeconds: 20
                periodSeconds: 10 
            startupProbe:
                httpGet:
                    path: /health/ready
                    port: 8080
                periodSeconds: 10 
                failureThreshold: 30    
                successThreshold: 1           

            livenessProbe:
                httpGet:
                    path: /health/live #/realms/master
                    port: 8080                    
                
                initialDelaySeconds: 30
                periodSeconds: 10 
                failureThreshold: 5                
                timeoutSeconds: 5                 
                successThreshold: 1  
                terminationGracePeriodSeconds: 180
            


            ports:
              - containerPort: 8080          
      restartPolicy: Always



  